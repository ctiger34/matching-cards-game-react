{"version":3,"sources":["Components/SingleCard.js","App.js","index.js"],"names":["SingleCard","club","HandleChoice","flipped","disabled","className","src","alt","onClick","clubImages","matched","App","useEffect","shuffleCards","useState","clubs","setClubs","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffledCards","sort","Math","random","map","card","id","prevCards","resetTurn","setTimeout","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAEaA,EAAa,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SASrD,OACC,qBAAKC,UAAU,OAAf,SACQ,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACE,qBAAKE,UAAU,QAAQC,IAAKL,EAAKK,IAAKC,IAAI,eAC1C,qBACCC,QAXQ,WACdJ,GACFF,EAAaD,IAULI,UAAU,OACVC,IAAI,mBACJC,IAAI,gBCbdE,EAAa,CACjB,CAAC,IAAO,mBAAoBC,SAAQ,GACpC,CAAC,IAAO,mBAAmBA,SAAQ,GACnC,CAAC,IAAO,mBAAmBA,SAAQ,GACnC,CAAC,IAAO,kBAAkBA,SAAQ,GAClC,CAAC,IAAO,iBAAiBA,SAAQ,GACjC,CAAC,IAAO,mBAAmBA,SAAQ,IAqFtBC,MAnFf,WAEEC,qBAAU,WACRC,MACA,IAEF,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOV,EAAP,KAAiBmB,EAAjB,KAGMV,EAAe,WACnB,IAAMW,EAAgB,UAAIf,EAAeA,GACtCgB,MAAK,kBAAKC,KAAKC,SAAW,MAC1BC,KAAI,SAACC,GAAD,mBAAC,eAAcA,GAAf,IAAqBC,GAAGJ,KAAKC,cAEpCP,EAAa,MACbE,EAAa,MACbN,EAASQ,GACTN,EAAS,IAGLhB,EAAe,SAAC2B,GACpBV,EAAYG,EAAaO,GAAQT,EAAaS,IAIhDjB,qBAAU,WACLO,GAAaE,IACdE,GAAY,GACTJ,EAAUb,MAAQe,EAAUf,KAC7BU,GAAS,SAAAe,GACP,OAAOA,EAAUH,KAAI,SAAAC,GACnB,OAAGA,EAAKvB,MAAQe,EAAUf,IACxB,2BAAUuB,GAAV,IAAgBnB,SAAQ,IAEjBmB,QAIbG,KAEAC,YAAW,kBAAMD,MAAa,QAGjC,CAACb,EAAUE,IAId,IAAMW,EAAY,WAChBZ,EAAa,MACbE,EAAa,MACbJ,GAAS,SAAAgB,GAAS,OAAIA,EAAY,KAClCX,GAAY,IAId,OACE,sBAAKlB,UAAU,MAAf,UACE,oDACA,wBAAQG,QAASK,EAAjB,sBAEA,qBAAKR,UAAU,YAAf,SACGU,EAAMa,KAAI,SAAC3B,GAAD,OAET,cAAC,EAAD,CACEC,aAAcA,EACdD,KAAMA,EAENE,QAASF,IAASkB,GAAalB,IAASoB,GAAapB,EAAKS,QAC1DN,SAAUA,GAFLH,EAAK6B,SAOhB,uBAjBF,UAkBUb,MCvFdkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.22cbab35.chunk.js","sourcesContent":["import \"./SingleCard.css\"\n\nexport const SingleCard = ({club, HandleChoice, flipped, disabled}) => {\n\n\n    const handleClick = () => {\n      if(!disabled){\n        HandleChoice(club)\n      }\n    }\n\n    return (\n     <div className='card'>\n             <div className={flipped ? \"flipped\" : \"\"}>\n               <img className='front' src={club.src} alt='card front' />\n               <img \n                onClick={handleClick}\n                className='back' \n                src='./img/cover1.png' \n                alt='cover' />\n             </div>\n          \n        </div>\n    )\n}\n\n","import { useEffect, useState } from 'react';\nimport './App.css';\nimport { SingleCard } from './Components/SingleCard';\n\n\n\nconst clubImages = [\n  {\"src\": \"img/scroll-1.png\", matched:false},\n  {\"src\": \"img/helmet-1.png\",matched:false},\n  {\"src\": \"img/shield-1.png\",matched:false},\n  {\"src\": \"img/sword-1.png\",matched:false},\n  {\"src\": \"img/ring-1.png\",matched:false},\n  {\"src\": \"img/potion-1.png\",matched:false}\n]\nfunction App() {\n\n  useEffect(()=>{\n    shuffleCards()\n  },[])\n\n  const [clubs, setClubs] = useState([])\n  const [turns, setTurns] = useState(0)\n  const [choiceOne, setChoiceOne] = useState(null)\n  const [choiceTwo, setChoiceTwo] = useState(null)\n  const [disabled, setDisabled] = useState(false)\n\n\n  const shuffleCards = () => {\n    const shuffledCards = [...clubImages, ...clubImages]\n      .sort(()=> Math.random() - 0.5)\n      .map((card) => ({...card, id:Math.random() }))\n  \n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setClubs(shuffledCards)\n    setTurns(0)\n  }\n\n  const HandleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n\n  }\n\n  useEffect(() => {\n    if(choiceOne && choiceTwo){\n      setDisabled(true)\n      if(choiceOne.src === choiceTwo.src){\n        setClubs(prevCards => {\n          return prevCards.map(card => {\n            if(card.src === choiceTwo.src){\n              return{...card, matched:true}\n            }else{\n              return card\n            }\n          })\n        })\n        resetTurn()\n      }else{\n        setTimeout(() => resetTurn(), 1000)\n      }\n    }\n  }, [choiceOne,choiceTwo])\n\n  \n\n  const resetTurn = () => {\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(prevTurns => prevTurns + 1)\n    setDisabled(false)\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1>Match The Pictures</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className=\"card-grid\">\n        {clubs.map((club) => (\n\n          <SingleCard \n            HandleChoice={HandleChoice}\n            club={club} \n            key={club.id}\n            flipped={club === choiceOne || club === choiceTwo || club.matched}\n            disabled={disabled}\n          />\n\n        ))}\n      </div>\n      <br/>\n      Turns: {turns}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}